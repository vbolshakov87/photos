<div class="container">
  <h2>Upload file for post <strong><%=@post.title%></strong></h2>
  <%= form_for Photo.new, :html => { :multipart => true, :id => "fileupload"  } do |f| %>
      <!-- The fileupload-buttonbar contains buttons to add/delete files and start/cancel the upload -->
      <div class="row fileupload-buttonbar">
        <div class="span7">
          <!-- The fileinput-button span is used to style the file input field as button -->
        <span class="btn btn-success fileinput-button">
          <i class="glyphicon glyphicon-plus"></i>
          <span>Add files...</span>
          <input type="file" name="photo[image]" multiple>
        </span>
          <button type="submit" class="btn btn-primary start">
            <i class="glyphicon glyphicon-upload"></i>
            <span>Start upload</span>
          </button>
          <button type="reset" class="btn btn-warning cancel">
            <i class="glyphicon glyphicon-ban-circle"></i>
            <span>Cancel upload</span>
          </button>
          <button type="button" class="btn btn-danger delete">
            <i class="glyphicon glyphicon-trash"></i>
            <span>Delete</span>
          </button>
          <input type="checkbox" class="toggle">
        </div>
        <div class="col-lg-5 fileupload-progress fade">
          <!-- The global progress bar -->
          <div class="progress progress-striped active" role="progressbar" aria-valuemin="0" aria-valuemax="100">
            <div class="progress-bar progress-bar-success" style="width:0%;"></div>
          </div>
          <!-- The extended global progress state -->
          <div class="progress-extended">&nbsp;</div>
        </div>
      </div>
      <!-- The loading indicator is shown during image processing -->
      <div class="fileupload-loading"></div>
      <br>
      <%= render 'photo_list' %>
  <% end %>
</div>
<script>
    var fileUploadErrors = {
        maxFileSize: 'File is too big',
        minFileSize: 'File is too small',
        acceptFileTypes: 'Filetype not allowed',
        maxNumberOfFiles: 'Max number of files exceeded',
        uploadedBytes: 'Uploaded bytes exceed file size',
        emptyResult: 'Empty file upload result'
    };
</script>

<!-- The template to display files available for upload -->
<script id="template-upload" type="text/x-tmpl">
  {% for (var i=0, file; file=o.files[i]; i++) { %}
      <div class="col-sm-6 col-md-3 template-upload  fade" id="{%=file.uploadID%}">
        <div class="thumbnail">
          <div class="preview"><span class="fade"></span></div>
          <div class="caption">
            <h3>{%=file.name%}</h3>
            <p><span>{%=o.formatFileSize(file.size)%}</span></p>
            <div class="size">
              <div class="progress progress-success progress-striped active"><div class="progress-bar" style="width:0%;"></div></div>
            </div>
            <div class="button-group">
                {% if (file.error) { %}
                    <div class="alert alert-danger" role="alert">
                      <strong>{%=locale.fileupload.error%}</strong> <a href="#" {%=locale.fileupload.errors[file.error] || file.error%}
                    </div>
                {% } else if (o.files.valid && !i) { %}
                    <div class="block-inline start">
                      <button class="btn btn-primary">
                        <i class="icon-upload icon-white"></i>
                        <span>{%=locale.fileupload.start%}</span>
                      </button>
                    </div>
                {% } else { %}
                    <h3>Error</h3>
                {% } %}
                <div class="block-inline cancel">{% if (!i) { %}
                  <button class="btn btn-warning">
                    <i class="icon-ban-circle icon-white"></i>
                    <span>{%=locale.fileupload.cancel%}</span>
                  </button>
                  {% } %}
                </div>
            </div>
          </div>
        </div>
      </div>
  {% } %}
</script>
<!-- The template to display files available for download -->
<script id="template-download" type="text/x-tmpl">
  {% for (var i=0, file; file=o.files[i]; i++) { %}
    <div class="col-sm-6 col-md-3 template-download template-download-{%=i%} fade" data-id="{%=file.id%}">
      <div class="thumbnail">
        {% if (file.error) { %}
            <div class="alert alert-danger" role="alert">
              <strong>{%=locale.fileupload.error%}</strong> <a href="#" {%=locale.fileupload.errors[file.error] || file.error%}
            </div>
        {% } else { %}
            <a href="{%=file.update_url%}" class="photo-edit" role="button"><img src="{%=file.list_url%}" alt=""></a>
            <div class="caption">
              <h3><a href="{%=file.url%}" title="{%=file.name%}" rel="{%=file.thumbnail_url&&'gallery'%}" download="{%=file.name%}">{%=file.name%}</a></h3>
              <p><span>{%=o.formatFileSize(file.size)%}</span></p>
              <div class="button-group">
                  <div class="block-inline delete">
                    <button class="btn btn-danger" data-type="{%=file.delete_type%}" data-url="{%=file.delete_url%}">
                      <i class="icon-trash icon-white"></i>
                      <span>{%=locale.fileupload.destroy%}</span>
                    </button>
                    <input type="checkbox" name="delete" value="1">
                  </div>
                  <a href="{%=file.update_url%}" class="block-inline btn btn-primary btn-update btn-photo-edit" role="button"><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span> Edit</a>
              </div>
            </div>
        {% } %}
      </div>
    </div>
  {% } %}
</script>

<script type="text/javascript" charset="utf-8">
    $(function () {
        var $list = $('.list-file-upload');
        // Initialize the jQuery File Upload widget:
        $('#fileupload').fileupload({
            filesContainer : $('.list-file-upload'),
            previewMaxWidth : 245,
            previewMaxHeight : 245,
            singleFileUploads : true,
            maxNumberOfFiles : 100,
            imageMinWidth : 8500,
            imageMinHeight : 8500,
            formData : {
                post_id : <%=params[:post]%>
            },
            progress : function (e, data) {
                var mprogress = parseInt(data.loaded / data.total * 100, 10);
                $('#'+data.files[0].uploadID).find('.progress-bar:first').css(
                        'width', mprogress + '%'
                );
            },
            progressall: function (e, data) {
                if (e.isDefaultPrevented()) {
                    return false;
                }
                var $this = $(this),
                        progress = Math.floor(data.loaded / data.total * 100),
                        globalProgressNode = $this.find('.fileupload-progress'),
                        extendedProgressNode = globalProgressNode
                                .find('.progress-extended');
                if (extendedProgressNode.length) {
                    extendedProgressNode.html(
                            ($this.data('blueimp-fileupload') || $this.data('fileupload'))
                                    ._renderExtendedProgress(data)
                    );
                }
                globalProgressNode
                        .find('.progress')
                        .attr('aria-valuenow', progress)
                        .find('.progress-bar:first').css(
                        'width',
                                progress + '%'
                );
            }
        }).on('fileuploadadd', function (e, data)
        {
            $.each(data.files, function (index, file)
            {
                file.uploadID = file.name.split('.').join('') + Math.floor((Math.random() * 100) + 1);
            });
        });


        $(".list-file-upload").sortable({
            placeholder: "col-sm-6 col-md-3 template-download ui-state-highlight",
            update: function( event, ui ) {
                var sortedImagesIdArr = [];
                $list.find('.template-download').each(function(){
                   sortedImagesIdArr.push($(this).data('id'))
                });
                $.ajax({
                    url: '<%=photos_sort_path({:post=>@post.id})%>',
                    data: {
                        sorted: sortedImagesIdArr
                    },
                    type: 'POST',
                    dataType : "json",
                    success: function( json ) {
                        //console.log(json);
                    },
                    error: function( xhr, status, errorThrown ) {
                        alert( "Sorry, there was a problem!" );
                        console.log( "Error: " + errorThrown );
                        console.log( "Status: " + status );
                        console.dir( xhr );
                    }
                });
            }
        }).disableSelection();

    });
</script>
